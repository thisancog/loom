{"version":3,"sources":["main.js"],"names":["resizeBody","vpWidth","changeHeight","max","documentElement","document","window","vpHeight","setTimeout","init","loom","style","settingsToggle","settings","threadWidthInput","patternWidthInput","addEventListener","removeWeftBtns","controls","addWarpBtn","removeWarpBtns","seedInput","generateBtn","luckyBtn","downloadBtn","params","changeWarpDirections","random","threadSpacingInput","maxNumWefts","maxNumWarps","addWeftBtn","maxThreadWidth","patternWidthMinMultiplier","querySelector","patternWidthMaxMultiplier","slice","perlinWavelengthMinMultiplier","perlinWavelengthMaxMultiplier","patternLengthMin","patternLengthMax","linear","p5Sketch","numWeftsMinPower2","numWeftsMaxPower2","initLoom","registerEvents","resetLoom","forEach","generateFromString","threadWidth","parseFloat","args","parseArgs","parseInt","sketch","sketchContainer","weftColors","input","warps","color","row","threadSpacing","threadTotal","pattern","warpSettings","seeder","xmur3","getRandomNumber","xoshiro128ss","algorithms","Math","generateFromStringRandom","numWefts","lerp","rand","numWarps","patternWidth","colors","generateRandomColorSet","newColor","i","addWeft","length","patternLength","perlinWavelength","patternPerlin","perlin1D","newPattern","n","addWarp","generateFromStringLinear","threadSpacingMinMultiplier","getMultinomial","newExpanded","multinomial","factor","String","expanded","k","Array","newSummand","j","fromCharCode","push","join","value","Object","entries","template","newElem","removeBtn","weftsInner","removeWeft","e","warpsInner","parentElement","classList","saveFrame","now","padThis","removeWarp","removeChild","luckyMode","seedLength","seedString","chars","save","fileName","toggleSettings","wefts","currentY","currentWarpIndex","p","getNumWefts","x","offsetX","gap","step","width","y","background","direction","currentWarp","underOrOver","Warp","wrapIndex","counter","startX","currentX","endX","strokeCap","Weft","startY","endY","strokeWeight","stroke","minWidth","maxWidth","limit","min","h","seed","imul","a","r","c","b","d","A","Z","randomNum","interpolate","ft","px","pa","pb","PI","hue","cos","PRNG","schemes","variations","scheme","variation","colorSet","wavelength","threadSpacingMaxMultiplier","credits","console"],"mappings":"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","file":"main.min.js","sourcesContent":["\"use strict\";\n\n(function() {\n\n\t/***************************************\n\t\tCommon methods\n\t***************************************/\n\n\tvar vpWidth = function() { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0); }\n\tvar vpHeight = function() { return Math.max(document.documentElement.clientHeight, window.innerHeight || 0); }\n\n\t\n\tvar init = function() {\n\t\tresizeBody();\n\t\tloom();\n\t\tcredits();\n\t}\n\n\n\n\t/***************************************\n\t\tResize body\n\t***************************************/\n\n\tvar resizeBody = function() {\n\t\tvar changeHeight = function() {\n\t\t\tdocument.documentElement.style.setProperty('--vw', (0.01 * document.body.clientWidth) + 'px');\n\t\t\tdocument.documentElement.style.setProperty('--vh', (0.01 * window.innerHeight) + 'px');\n\t\t\tdocument.body.style.height = window.innerHeight + 'px';\n\t\t}\n\n\t\tsetTimeout(changeHeight, 20); // older Safari iOS will lag\n\t\twindow.addEventListener('resize', changeHeight);\n\t}\n\n\n\n\n\n\t/***************************************\n\t\tLoom\n\t***************************************/\n\n\tvar loom = function() {\n\t\tvar sketchContainer    = document.querySelector('.sketch-container'),\n\t\t\tcontrols           = document.querySelector('.controls'),\n\t\t\tsettings           = controls.querySelector('.settings'),\n\t\t\tsettingsToggle     = settings.querySelector('.settings-toggle'),\n\t\t\tthreadWidthInput   = document.querySelector('#thread-width'),\n\t\t\tthreadSpacingInput = document.querySelector('#thread-spacing'),\n\t\t\tpatternWidthInput  = document.querySelector('#pattern-width'),\n\t\t\taddWeftBtn         = controls.querySelector('.add-weft-btn'),\n\t\t\tremoveWeftBtns     = [].slice.call(controls.querySelectorAll('.setting-wefts .remove-btn')),\n\t\t\taddWarpBtn         = controls.querySelector('.add-warp-btn'),\n\t\t\tremoveWarpBtns     = [].slice.call(controls.querySelectorAll('.setting-warps .remove-btn')),\n\t\t\tseedInput          = controls.querySelector('#seed'),\n\t\t\tgenerateBtn        = controls.querySelector('#generate'),\n\t\t\tluckyBtn           = controls.querySelector('#lucky'),\n\t\t\tdownloadBtn        = controls.querySelector('#download'),\n\t\t\targs, p5Sketch;\n\n\t\t// some fixed variables to tweak behaviour\n\t\tvar params = {\n\t\t\t\tchangeWarpDirections: \t\t\t\tfalse,\n\t\t\t\trandom: {\n\t\t\t\t\tmaxNumWefts:\t\t\t\t\t20,\n\t\t\t\t\tmaxNumWarps:\t\t\t\t\t20,\n\t\t\t\t\tmaxThreadWidth: \t\t\t\t20,\n\t\t\t\t\tpatternWidthMinMultiplier: \t\t3,\t\t\t// lower boundary for the pattern width, n * wefts number\n\t\t\t\t\tpatternWidthMaxMultiplier:\t\t10,\t\t\t// upper boundary for the pattern width, n * wefts number\n\t\t\t\t\tperlinWavelengthMinMultiplier:\t0.02,\t\t// [0, 1[ lower boundary for the Perlin Noise wavelength for the warp length\n\t\t\t\t\tperlinWavelengthMaxMultiplier:\t0.20,\t\t// ]0, 1] upper boundary for the Perlin Noise wavelength for the warp length\n\t\t\t\t\tpatternLengthMin: \t\t\t\t4,\n\t\t\t\t\tpatternLengthMax:\t\t\t\t50\n\t\t\t\t},\n\t\t\t\tlinear: {\n\t\t\t\t\tnumWeftsMinPower2:\t\t\t\t1,\n\t\t\t\t\tnumWeftsMaxPower2:\t\t\t\t5,\n\t\t\t\t\tthreadSpacingMinMultiplier:\t\t0.1,\n\t\t\t\t\tthreadSpacingMaxMultiplier:\t\t0.2,\n\t\t\t\t\tpatternWidthMinMultiplier:\t\t1,\n\t\t\t\t\tpatternWidthMaxMultiplier:\t\t10,\n\t\t\t\t}\n\t\t\t};\n\n\n\n\t\tvar registerEvents = function() {\n\t\t\tsettingsToggle.addEventListener('click', toggleSettings);\n\t\t\taddWeftBtn.addEventListener(    'click', addWeft);\n\t\t\tremoveWeftBtns.forEach(btn =>\n\t\t\t\tbtn.addEventListener(       'click', removeWeft)\n\t\t\t);\n\t\t\taddWarpBtn.addEventListener(    'click', addWarp);\n\t\t\tremoveWarpBtns.forEach(btn =>\n\t\t\t\tbtn.addEventListener(       'click', removeWarp)\n\t\t\t);\n\n\t\t\tgenerateBtn.addEventListener(   'click', resetLoom);\n\t\t\tluckyBtn.addEventListener(      'click', luckyMode);\n\t\t\tdownloadBtn.addEventListener(   'click', saveFrame);\n\t\t\tcontrols.addEventListener(     'submit', resetLoom);\n\t\t}\n\n\t\tvar initLoom = function() {\n\t\t\targs            = parseArgs();\n\t\t\tp5Sketch        = new p5(sketch, sketchContainer);\n\t\t}\n\n\t\tvar resetLoom = function(e) {\n\t\t\tif (e)\t\t\te.preventDefault();\n\t\t\tif (p5Sketch)\tp5Sketch.remove();\n\n\t\t\tinitLoom();\n\t\t}\n\n\t\tvar parseArgs = function() {\n\t\t\tif (seedInput.value.length > 0)\n\t\t\t\tgenerateFromString(seedInput.value);\n\n\t\t\tlet threadWidth   = parseFloat(threadWidthInput.value),\n\t\t\t\tthreadSpacing = parseFloat(threadSpacingInput.value),\n\t\t\t\tpatternWidth  = parseInt(patternWidthInput.value);\n\n\t\t\tlet weftColors    = [].slice.call(controls.querySelectorAll('.setting-wefts .repeater-elements input[type=\"color\"]'))\n\t\t\t\t\t\t\t\t  .map(input => input.value);\n\n\t\t\tlet warps         = [].slice.call(controls.querySelectorAll('.setting-warps .repeater-elements .repeater-single'))\n\t\t\t\t\t\t\t\t  .map(function(row) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tcolor:   row.querySelector('input[type=\"color\"]').value,\n\t\t\t\t\t\t\t\t\t\t\tpattern: row.querySelector('input[type=\"text\"]').value\n\t\t\t\t\t\t\t\t\t\t\t\t\t    .replace(/[^01]/g, '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t    .split(''),\n\t\t\t\t\t\t\t\t  \t\t}\n\t\t\t\t\t\t\t\t  });\n\n\t\t\treturn {\n\t\t\t\tthreadWidth: \tthreadWidth,\n\t\t\t\tthreadSpacing:\tthreadSpacing,\n\t\t\t\tthreadTotal:    threadWidth + threadSpacing,\n\t\t\t\tpatternWidth:\tpatternWidth,\n\t\t\t\tweftColors: \tweftColors,\n\t\t\t\twarpSettings:   warps\n\t\t\t};\n\t\t}\n\n\n\t\t/***************************************\n\t\t\tPattern generation\n\t\t***************************************/\n\n\t\tvar generateFromString = function(seed) {\n\t\t//\tclear everything\n\t\t\tdocument.querySelector('.setting-wefts .repeater-elements').innerHTML = '';\n\t\t\tdocument.querySelector('.setting-warps .repeater-elements').innerHTML = '';\n\n\t\t\tlet seeder          = xmur3(seed),\n\t\t\t\tgetRandomNumber = xoshiro128ss(seeder(), seeder(), seeder(), seeder()),\n\t\t\t\talgorithms      = [\n\t\t\t\t\t\t\t\t\tgenerateFromStringRandom,\n\t\t\t\t\t\t\t\t\tgenerateFromStringLinear,\n\t\t\t//\t\t\t\t\t\tgenerateFromStringDeitz\n\t\t\t\t\t\t\t\t  ];\n\n\t\t//\tgenerateFromStringDeitz(getRandomNumber);\n\t\t\talgorithms[Math.floor(getRandomNumber() * algorithms.length)](getRandomNumber);\n\t\t}\n\n\n\t\tvar generateFromStringRandom = function(rand) {\n\t\t\tlet numWefts        = parseInt(lerp(rand(), 1, params.random.maxNumWefts)),\n\t\t\t\tnumWarps        = parseInt(lerp(rand(), 1, params.random.maxNumWarps)),\n\t\t\t\tthreadWidth     = parseInt(lerp(rand(), 1, params.random.maxThreadWidth)),\n\t\t\t\tthreadSpacing   = parseInt(lerp(rand(), 0, 0.5 * threadWidth)),\n\t\t\t\tpatternWidth    = parseInt(lerp(rand(), params.random.patternWidthMinMultiplier * numWefts, params.random.patternWidthMaxMultiplier * numWefts)),\n\t\t\t\tcolors          = generateRandomColorSet(rand);\n\n\t\t\tthreadWidthInput.value   = threadWidth;\n\t\t\tthreadSpacingInput.value = threadSpacing;\n\t\t\tpatternWidthInput.value  = patternWidth;\n\n\t\t\tfor (let i = 0; i < numWefts; i++) {\n\t\t\t\tlet newColor = colors[parseInt(lerp(rand(), 0, colors.length - 1))];\n\t\t\t\taddWeft(newColor);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < numWarps; i++) {\n\t\t\t\tlet newColor         = colors[parseInt(lerp(rand(), 0, colors.length - 1))],\n\t\t\t\t\tpatternLength    = parseInt(lerp(rand(), params.random.patternLengthMin, params.random.patternLengthMax)),\n\t\t\t\t\tperlinWavelength = Math.floor(patternWidth * lerp(rand(), params.random.perlinWavelengthMinMultiplier, params.random.perlinWavelengthMaxMultiplier)),\n\t\t\t\t\tpatternPerlin    = perlin1D(rand(), perlinWavelength),\n\t\t\t\t\tnewPattern       = '';\n\n\t\t\t\tfor (let n = 0; n < patternLength; n++) {\n\t\t\t\t\tnewPattern = newPattern + (patternPerlin() < 0.5 ? '0' : '1');\n\t\t\t\t}\n\n\t\t\t\taddWarp(newColor, newPattern);\n\t\t\t}\n\t\t}\n\n\t\tvar generateFromStringLinear = function(rand) {\n\t\t\tlet numWefts        = Math.pow(2, parseInt(lerp(rand(), params.linear.numWeftsMinPower2, params.linear.numWeftsMaxPower2))),\n\t\t\t\tnumWarps        = numWefts,\n\t\t\t\tthreadWidth     = 2 * numWefts,\n\t\t\t\tthreadSpacing   = numWefts * parseInt(lerp(rand(), params.linear.threadSpacingMinMultiplier, params.linear.threadSpacingMaxMultiplier)),\n\t\t\t\tpatternWidth    = numWefts * parseInt(lerp(rand(), params.linear.patternWidthMinMultiplier, params.linear.patternWidthMaxMultiplier)),\n\t\t\t\tcolors          = generateRandomColorSet(rand);\n\n\t\t\tthreadWidthInput.value   = threadWidth;\n\t\t\tthreadSpacingInput.value = threadSpacing;\n\t\t\tpatternWidthInput.value  = patternWidth;\n\n\t\t\tfor (let i = 0; i < numWefts; i++) {\n\t\t\t\tlet newColor = colors[parseInt(lerp(rand(), 0, colors.length - 1))];\n\t\t\t\taddWeft(newColor);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < numWarps; i++) {\n\t\t\t\tlet newColor         = colors[parseInt(lerp(rand(), 0, colors.length - 1))],\n\t\t\t\t\tpatternLength    = patternWidth * (1 - 0.5 * (Math.floor(rand() * 3) - 1)),\n\t\t\t\t\tperlinWavelength = numWefts,\n\t\t\t\t\tpatternPerlin    = perlin1D(rand(), perlinWavelength),\n\t\t\t\t\tnewPattern       = '';\n\n\t\t\t\tfor (let n = 0; n < patternLength; n++) {\n\t\t\t\t\tnewPattern = newPattern + (patternPerlin() < 0.5 ? '0' : '1');\n\t\t\t\t}\n\n\t\t\t\taddWarp(newColor, newPattern);\n\t\t\t}\n\t\t}\n\n\t//\tnot working as intended,\n\t//\twork in progress\n\t\tvar generateFromStringDeitz = function(rand) {\n\t\t\tlet numWefts        = 1,\n\t\t\t\tnumWarps        = 1,\n\t\t\t\tthreadWidth     = 12,\n\t\t\t\tthreadSpacing   = 2,\n\t\t\t\tcolors          = generateRandomColorSet(rand),\n\t\t\t\tnumVariables    = 2,\n\t\t\t\tvariables       = Array(numVariables).fill(0).map((_, i) => String.fromCharCode(i + 97)),\n\t\t\t\tpower           = 2, // parseInt(lerp(rand(), 1, 5)),\n\t\t\t\tmultinomial     = getMultinomial(numVariables, power),\n\t\t\t\tpatternWidth    = multinomial.length; // + (parseInt(lerp(rand(), -5, 5)));\n\n\t\t\tthreadWidthInput.value   = threadWidth;\n\t\t\tthreadSpacingInput.value = threadSpacing;\n\t\t\tpatternWidthInput.value  = patternWidth;\n\n\t\t\tconsole.log(multinomial);\n\t\t\t// aaababbb\n\n\t\t\tfor (let i = 0; i < numWefts; i++) {\n\t\t\t\tlet newColor = colors[parseInt(lerp(rand(), 0, colors.length - 1))];\n\t\t\t\taddWeft('#FFFFFF');\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < numWarps; i++) {\n\t\t\t\tlet newColor            = colors[parseInt(lerp(rand(), 0, colors.length - 1))],\n\t\t\t\t\tmultinomialReplaced = multinomial.split('').map(j => j == variables[i] ? 1 : 0).join('');\n\n\t\t\t\taddWarp('#DDDDDD', multinomialReplaced);\n\t\t\t}\n\t\t}\n\n\t//\tnaive multionimal expansion\n\t\tvar getMultinomial = function(numVariables, power) {\n\t\t\tlet multinomial = {},\n\t\t\t\tfactor      = Array(numVariables).fill(0).map((_, i) => String.fromCharCode(i + 97)),\n\t\t\t\texpanded    = factor;\n\n\t\t\tfor (let k = 1; k < power; k++) {\n\t\t\t\tlet newExpanded = [];\n\t\t\t\tfor (let i = 0; i < numVariables; i++) {\n\t\t\t\t\tfor (let j = 0; j < expanded.length; j++) {\n\t\t\t\t\t\tlet newSummand = expanded[j] + String.fromCharCode(i + 97);\n\t\t\t\t\t\tnewExpanded.push(newSummand.split('').sort().join(''))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\texpanded = newExpanded.sort();\n\t\t\t}\n\n\t\t//\tcombining like terms\n\t\t\texpanded.forEach(term => multinomial[term] = !multinomial.hasOwnProperty(term) ? 1 : multinomial[term] + 1);\n\t\t\tmultinomial = Object.entries(multinomial).map(([factor, value]) => factor.repeat(value));\n\t\t\treturn multinomial.join('')\n\t\t}\n\n\n\t\t/***************************************\n\t\t\tInterface\n\t\t***************************************/\n\n\t\tvar addWeft = function(color) {\n\t\t\tlet weftsInner = controls.querySelector('.setting-wefts .repeater-elements'),\n\t\t\t\ttemplate   = controls.querySelector('.setting-wefts .repeater-template'),\n\t\t\t\tnewElem    = template.cloneNode(true),\n\t\t\t\tremoveBtn  = newElem.querySelector('.remove-btn');\n\n\t\t\tnewElem.classList.remove('repeater-template');\n\t\t\tweftsInner.appendChild(newElem);\n\t\t\tremoveBtn.addEventListener('click', removeWeft);\n\n\t\t\tif (color !== null) {\n\t\t\t\tnewElem.querySelector('input[type=\"color\"]').value = color;\n\t\t\t}\n\t\t}\n\n\t\tvar removeWeft = function(e) {\n\t\t\tlet row = e.target.closest('.repeater-single');\n\t\t\te.target.removeEventListener('click', removeWeft);\n\t\t\trow.parentElement.removeChild(row);\n\t\t}\n\n\t\tvar addWarp = function(color, pattern) {\n\t\t\tlet warpsInner = controls.querySelector('.setting-warps .repeater-elements'),\n\t\t\t\ttemplate   = controls.querySelector('.setting-warps .repeater-template'),\n\t\t\t\tnewElem    = template.cloneNode(true),\n\t\t\t\tremoveBtn  = newElem.querySelector('.remove-btn');\n\n\t\t\tnewElem.classList.remove('repeater-template');\n\t\t\twarpsInner.appendChild(newElem);\n\t\t\tremoveBtn.addEventListener('click', removeWarp);\n\n\t\t\tif (color !== null) {\n\t\t\t\tnewElem.querySelector('input[type=\"color\"]').value = color;\n\t\t\t}\n\n\t\t\tif (pattern !== null) {\n\t\t\t\tnewElem.querySelector('input[type=\"text\"]').value = pattern;\n\t\t\t}\n\t\t}\n\n\t\tvar removeWarp = function(e) {\n\t\t\tlet row = e.target.closest('.repeater-single');\n\t\t\te.target.removeEventListener('click', removeWarp);\n\t\t\trow.parentElement.removeChild(row);\n\t\t}\n\n\t\tvar saveFrame = function() {\n\t\t\tlet now      = new Date(),\n\t\t\t\tpadThis  = n => n.toString().padStart(2, '0'),\n\t\t\t\tfileName = seedInput.value.length > 0\n\t\t\t\t\t\t ? 'loom_seed_' + seedInput.value\n\t\t\t\t\t\t : 'loom_'   + now.getFullYear() + '-' + padThis(now.getMonth() + 1) + '-' + padThis(now.getDate())\n\t\t\t\t\t\t + ' ' + padThis(now.getHours()) + '-' + padThis(now.getMinutes())   + '-' + padThis(now.getSeconds());\n\t\t\tp5Sketch.save(fileName + '.jpg');\n\t\t}\n\n\t\tvar toggleSettings = function() {\n\t\t\tsettings.classList.toggle('show-settings');\n\t\t}\n\n\t\tvar luckyMode = function() {\n\t\t\tvar seedLength = parseInt(lerp(Math.random(), 1, 100)),\n\t\t\t\tseedString = '',\n    \t\t\tchars      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n\t\t\tfor (var i = 0; i < seedLength; i++) {\n\t\t\t\tseedString += chars.charAt(Math.floor(Math.random() * chars.length));\n\t\t\t}\n\n\t\t\tseedInput.value = seedString; // hacky but I don't care, it's late\n\t\t\tresetLoom();\n\t\t}\n\n\n\n\t\t/***************************************\n\t\t\tDrawing\n\t\t***************************************/\n\n\t\tvar sketch = function(p) {\n\t\t\tlet wefts         = [],\n\t\t\t\tnumWefts,\n\t\t\t\twarps         = [];\n\n\t\t\tvar\toffsetX          = 0.5 * args.threadWidth,\n\t\t\t\tcurrentY         = 0,\n\t\t\t\tcurrentWarpIndex = 0;\n\n\t\t\tp.setup = function() {\n\t\t\t\tp.createCanvas(sketchContainer.clientWidth, sketchContainer.clientHeight);\n\t\t\t\tnumWefts = getNumWefts();\n\n\t\t\t\tfor (let x = 0; x < numWefts; x++) {\n\t\t\t\t\twefts.push(new Weft({\n\t\t\t\t\t\tx:    \t\tx * args.threadTotal + offsetX, // offset because stroke is drawn centered\n\t\t\t\t\t\tcolor:\t\targs.weftColors[x % args.weftColors.length],\n\t\t\t\t\t\tgap:        args.threadSpacing,\n\t\t\t\t\t\tstep:       args.threadTotal,\n\t\t\t\t\t\twidth:\t\targs.threadWidth\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tfor (let y = 0; y < args.warpSettings.length; y++) {\n\t\t\t\t\twarps.push(new Warp({\n\t\t\t\t\t\tcolor:  \targs.warpSettings[y].color,\n\t\t\t\t\t\tgap:        args.threadSpacing,\n\t\t\t\t\t\tstep:       args.threadTotal,\n\t\t\t\t\t\twidth:  \targs.threadWidth,\n\t\t\t\t\t\tnumWefts:   numWefts,\n\t\t\t\t\t\tpattern:\targs.warpSettings[y].pattern\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tp.background(255);\n\t\t\t}\n\n\n\t\t\t/***************************************\n\t\t\t\tDraw row by row\n\t\t\t***************************************/\n\n\t\t\tp.draw = function() {\n\t\t\t\tif (currentY * args.threadTotal > p.height)\n\t\t\t\t\treturn p.noLoop();\n\n\t\t\t\tlet currentWarp = warps[currentWarpIndex],\n\t\t\t\t\tdirection   = Math.floor(currentY / warps.length) % 2;\n\n\t\t\t\tfor (var i = 0; i < numWefts; i++) {\n\t\t\t\t\tlet x           = direction == 0 || !params.changeWarpDirections\n\t\t\t\t\t\t\t\t\t? i\n\t\t\t\t\t\t\t\t\t: numWefts - i - 1,\n\t\t\t\t\t\tunderOrOver = currentWarp.weave(i, currentY, i == 0);\n\n\t\t\t\t\tif (underOrOver == 'under')\n\t\t\t\t\t \twefts[i].weave(currentY);\n\t\t\t\t}\n\n\t\t\t\tcurrentWarpIndex = wrapIndex(currentWarpIndex + 1, 0, args.warpSettings.length - 1);\n\t\t\t\tcurrentY++;\n\t\t\t}\n\n\n\t\t\t/***************************************\n\t\t\t\tWarps: horizontal threads\n\t\t\t\tToDo: flip direction on each row\n\t\t\t***************************************/\n\n\t\t\tclass Warp {\n\t\t\t\tconstructor(args) {\n\t\t\t\t\tthis.args            = args;\n\t\t\t\t\tthis.counter         = 0;\n\t\t\t\t}\n\n\t\t\t\tweave(currentX, currentY, changeDirectionNow) {\n\t\t\t\t\tthis.counter = params.changeWarpDirections && changeDirectionNow\n\t\t\t\t\t\t\t\t ? 0\n\t\t\t\t\t\t\t\t : wrapIndex(this.counter + 1, 0, this.args.pattern.length - 1);\n\n\t\t\t\t//\tgo under?\n\t\t\t\t\tif (this.args.pattern[this.counter] == 0)\n\t\t\t\t\t\treturn 'under';\n\n\t\t\t\t//\tgo over!\n\t\t\t\t\tlet\tstartX =  currentX      * this.args.step - this.args.gap,\n\t\t\t\t\t\tendX   = (currentX + 1) * this.args.step,\n\t\t\t\t\t\ty      = currentY * this.args.step + 0.5 * (this.args.width);\n\n\t\t\t\t\tp.strokeCap(p.SQUARE);\n\t\t\t\t\tp.strokeWeight(this.args.width);\n\t\t\t\t\tp.stroke(this.args.color);\n\t\t\t\t\tp.line(startX, y, endX, y);\n\t\t\t\t\treturn 'over';\n\t\t\t\t}\n\t\t\t}\n\n\n\n\t\t\t/***************************************\n\t\t\t\tWefts: vertical threads\n\t\t\t***************************************/\n\n\t\t\tclass Weft {\n\t\t\t\tconstructor(args) {\n\t\t\t\t\tthis.args  = args;\n\t\t\t\t}\n\n\t\t\t\tweave(currentY) {\n\t\t\t\t\tlet startY =  currentY      * this.args.step - this.args.gap,\n\t\t\t\t\t\tendY   = (currentY + 1) * this.args.step + this.args.gap;\n\n\t\t\t\t\tp.strokeCap(p.SQUARE);\n\t\t\t\t\tp.strokeWeight(this.args.width);\n\t\t\t\t\tp.stroke(this.args.color);\n\t\t\t\t\tp.line(this.args.x, startY, this.args.x, endY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar getNumWefts = function() {\n\t\t\t\tlet minWidth      = Math.floor(p.width / args.threadTotal),\n\t\t\t\t\tmaxWidth      = Math.ceil(minWidth / args.patternWidth) * args.patternWidth; // + Math.floor(0.5 * args.patternWidth);\n\t\t\t\treturn maxWidth;\n\t\t\t}\n\t\t}\n\n\t\t/***************************************\n\t\t\tHelper functions\n\t\t***************************************/\n\n\t\tvar wrapIndex = function(n, min, max) {\n\t\t\tif (n >= min && n <= max)\treturn n;\n\t\t\tif (n > max)\t\t\t\treturn min;\n\t\t\t\t\t\t\t\t\t\treturn max;\n\t\t}\n\n\t\tvar limit = function(n, min, max) {\n\t\t\treturn Math.min(Math.max(n, min), max);\n\t\t}\n\n\t\tvar lerp = function(n, min, max) {\n        \treturn min + (max - min) * limit(n, 0, 1);\n\t\t}\n\n\t\t// seeded pseudo-random number generator MurmurHash2, non-uniform distributions\n\t\tvar xmur3 = function(seed) {\n\t\t\tfor (var i = 0, h = 1779033703 ^ seed.length; i < seed.length; i++) {\n\t\t\t\th = Math.imul(h ^ seed.charCodeAt(i), 3432918353);\n\t\t\t\th = h << 13 | h >>> 19;\n\t\t\t}\n\n\t\t\treturn function() {\n\t\t\t\th = Math.imul(h ^ h >>> 16, 2246822507);\n\t\t\t\th = Math.imul(h ^ h >>> 13, 3266489909);\n\t\t\t\th = (h ^= h >>> 16) >>> 0;\n\t\t\t\treturn h;\n\t\t\t}\n\t\t}\n\n\t\t// seeded pseudo-random number generator xoshiro128**, uniform distribution\n\t\tvar xoshiro128ss = function(a, b, c, d) {\n\t\t    return function() {\n\t\t        var t = b << 9, r = a * 5; r = (r << 7 | r >>> 25) * 9;\n\t\t        c ^= a; d ^= b;\n\t\t        b ^= c; a ^= d; c ^= t;\n\t\t        d = d << 11 | d >>> 21;\n\t\t        return (r >>> 0) / 4294967296;\n\t\t    }\n\t\t}\n\n\t\tvar perlin1D = function(seed, wavelength) {\n\t\t\tlet M          = 1853020188851841,\t// 3^30\n\t\t\t    A          = 14348908,\t        // A - 1 has to be divisible by M's prime factors (3^15 + 1)\n\t\t\t    C          = 11, \t\t\t    // C and M are co-prime,\n\t\t\t\tZ          = Math.floor(seed * M),\n\t\t\t\trandomNum  = function() {\n\t\t\t\t\tZ = (A * Z + C) % M;\n\t\t\t\t\treturn Z / M - 0.5;\n\t\t\t\t},\n\t\t\t\th          = 1,\n\t\t\t\tx          = 0,\n\t\t\t\ty          = h / 2,\n\t\t\t\tamplitude  = 100, \t\t\t\t// amplitude\n\t\t\t\ta          = randomNum(),\n\t\t\t\tb          = randomNum();\n\n\t\t\tvar interpolate = function(pa, pb, px) {\n\t\t\t\tvar ft = px * Math.PI,\n\t\t\t\t\tf = (1 - Math.cos(ft)) * 0.5;\n\t\t\t\treturn pa * (1 - f) + pb * f;\n\t\t\t}\n\n\t\t\treturn function() {\n\t\t\t\tif (x % wavelength === 0) {\n\t\t\t\t\ta = b;\n\t\t\t\t\tb = randomNum();\n\t\t\t\t\ty = h / 2 + a * amplitude;\n\t\t\t\t} else {\n\t\t\t\t\ty = h / 2 + interpolate(a, b, (x % wavelength) / wavelength) * amplitude;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tx += 1;\n\t\t\t\treturn y;\n\t\t\t}\n\t\t}\n\n\t\tvar generateRandomColorSet = function(PRNG) {\n\t\t\tlet hue        = parseInt(lerp(PRNG(), 0, 359)),\n\t\t\t\tschemes    = ['mono', 'contrast', 'triade', 'tetrade', 'analogic'],\n\t\t\t\tvariations = ['default', 'pastel', 'soft', 'light', 'pale'],\n\t\t\t\tscheme     = schemes[parseInt(lerp(PRNG(), 0, schemes.length - 1))],\n\t\t\t\tvariation  = variations[parseInt(lerp(PRNG(), 0, variations.length - 1))],\n\t\t\t\tcolorSet   = new ColorScheme();\n\n\t\t\tcolorSet.from_hue(hue).scheme(scheme);\n\t\t\tif (['triade', 'tetrade', 'analogic'].indexOf(scheme) > -1)\n\t\t\t\tcolorSet.distance(lerp(PRNG(), 0.25, 0.5));\n\t\t\t\n\t\t\tlet colors = colorSet.variation(variation).colors();\n\t\t\treturn colors.map(color => '#' + color);\n\t\t}\n\n\t\tregisterEvents();\n\t\tluckyMode();\n\t}\n\n\n\n\n\n\n\t/***************************************\n\t\tCredits\n\t***************************************/\n\n\tvar credits = function() {\n\t\tvar credits = '**********\\n\\nThis website was built by Matthias Planitzer.\\nwww.matthias-planitzer.de\\n\\n**********';\n\t\tconsole.log('%c' + credits, 'color: #00F; font-family: Helvetica Neue\", Helvetica, sans-serif; font-size: 14px;');\t\n\t}\n\n\tinit();\n})();"]}